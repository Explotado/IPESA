<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:l="sap.ui.layout" xmlns:f="sap.ui.layout.form">
	<!-- El ID de la Page tiene que coincidir con la key del NavigationListItem del menu! -->
	<Page id="EntregaPedidoVentasPickingEntregaSalida" title="{appModel>/Subtitulo}">
		<content>
			<f:SimpleForm id="idFormEntregaPedidoVentasPickingEntregaSalida" editable="true" layout="ColumnLayout" singleContainerFullSize="false"
				columnsL="1" columnsM="1" emptySpanL="4">
				<f:content>
					<!--Centro-->
					<Label text="{i18n>input_centro_label}" required="true"/>
					<Input
						value="{appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Centro}"
						valueHelpOnly="false" showValueHelp="true"
						valueHelpRequest="onValueHelp_EntregaPedidoVentasPickingEntregaSalida_Centro"></Input>

				

					<!--Entrega-->
					<Label text="{i18n>input_entrega_label}" required="true"/>
					<Input value="{appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Entrega}" valueHelpOnly="false" showValueHelp="true"
						valueHelpRequest="onValueHelp_EntregaPedidoVentasPickingEntregaSalida_Entrega"
						submit="onSubmit_Entrega_EntregaPedidoVentasPickingEntregaSalida"></Input>
					<!--Ruta-->
					<Label text="{i18n>input_ruta_label}" required="true"/>
					<Input
						value="{appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Ruta}"
						valueHelpOnly="false" showValueHelp="true"
						valueHelpRequest="onValueHelp_EntregaPedidoVentasPickingEntregaSalida_Ruta"></Input>

					<!--Switch contabilizar-->
					<Label text="{i18n>switch_contabilizar_label}" required="true"/>
					<Switch state="{appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Contabilizar}" customTextOff="No" customTextOn="SÃ­"
						visible="{= ${appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Entrega} !== '' }"/>
				</f:content>
			</f:SimpleForm>
			<!--Cabecera de Entrega elegida-->
			<f:SimpleForm visible="{= ${appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Entrega} !== '' }">
				<f:content>
					<Label text="Pto. Exped."></Label>
					<Text text="{appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Vstel}"></Text>
					<!-- <Text text="Peso Neto: 0 KG"></Text> -->
					
				
					<Label text="Destinatario"></Label>
					<Text text="{appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/KunnrName}"></Text>
					<!-- <Text text="Peso Bruto: 0 KG"></Text> -->
					
					<Label text="Fecha Entr."></Label>
					<Text text="{path: 'appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Lfdat', formatter: '.formatter.formatDate' }"></Text>
					<Label text="Peso Neto"></Label>
					<Text text="{path: 'appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/PesoNetoTotal', formatter: '.formatter.cantidadPickeada' } KG"></Text>
					<Label text="Peso Bruto"></Label>
					<Text text="{path: 'appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/PesoBrutoTotal', formatter: '.formatter.cantidadPickeada' } KG"></Text>
				
				</f:content>
			</f:SimpleForm>
			<!--Lista de Posiciones de Entrega elegida-->
			<Table items="{path: 'appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/ListaPosiciones', filters: [ {path: 'Posnr', operator: 'LT', value1: 900000 } ] }"
				visible="{= ${appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Entrega} !== '' }" headerText="Posiciones">
				<columns>
					<Column>
						<Text text="Pos"/>
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="Centro"/>
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="Almacen"/>
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="Material"/>
					</Column>
					<Column minScreenWidth="Tablet" demandPopin="true">
						<Text text="Cant./UM"/>
					</Column>
					<Column>
						<Text text="Cant.Pickeada"/>
					</Column>
					<Column>
						<Text text="UMp"/>
					</Column>
					<Column>
						<Text text=""/>
					</Column>
				</columns>
				<items>
					<ColumnListItem highlight="{ parts: [ 'appModel>FaltaPickear', 'appModel>Kostk' ], formatter: '.formatter.highlightPosicion' }">
						<cells>
							<ObjectIdentifier title="{appModel>Posnr}"/>
							<Text text="{appModel>Werks}"/>
							<Input value="{appModel>Lgort}" valueHelpOnly="false" change="onSubmit_Almacen_EntregaPedidoVentasPickingEntregaSalida" showValueHelp="true"
								submit="onSubmit_Almacen_EntregaPedidoVentasPickingEntregaSalida"
								valueHelpRequest="onValueHelp_EntregaPedidoVentasPickingEntregaSalida_Almacen"></Input>
							<ObjectIdentifier title="{appModel>Matnr}" text="{appModel>Arktx}"/>
							<ObjectNumber number="{appModel>Lfimg}" unit="{appModel>Meins}"/>
							<HBox>
								<ProgressIndicator class="sapUiSmallMarginBottom" visible="{= ${appModel>Kostk} !== 'C' }"
									percentValue="{ parts: [ {path: 'appModel>CantPickeada'},{path: 'appModel>Lfimg'}], formatter: '.formatter.porcentajePickeado' }"
									displayValue="{ path: 'appModel>CantPickeada', formatter: '.formatter.cantidadPickeadaDec3' }" showValue="true"
									state="{ parts: [ {path: 'appModel>CantPickeada'},{path: 'appModel>Lfimg'}], formatter: '.formatter.colorPorcentajePickeadoExacto' }"/>
								<!--<ProgressIndicator class="sapUiSmallMarginBottom" visible="{= ${appModel>Kostk} !== 'C' }"
									percentValue="{ parts: [ {path: 'appModel>CantPickeada'},{path: 'appModel>Lfimg'}], formatter: '.formatter.porcentajePickeado' }"
									displayValue="{ path: 'appModel>CantPickeada', formatter: '.formatter.cantidadPickeada' }" showValue="true"
									state="{ parts: [ {path: 'appModel>CantPickeada'},{path: 'appModel>Lfimg'}], formatter: '.formatter.colorPorcentajePickeado' }"/>-->
								<ProgressIndicator class="sapUiSmallMarginBottom" visible="{= ${appModel>Kostk} === 'C' }" percentValue="100"
									displayValue="{appModel>Lfimg}" showValue="true" state="Success"/>
							</HBox>
							<!--<ProgressIndicator class="sapUiSmallMarginBottom"-->
							<!--	percentValue="{ parts: [ {path: 'appModel>CantPickeada'},{path: 'appModel>Lfimg'}], formatter: '.formatter.porcentajePickeado' }"-->
							<!--	displayValue="{ path: 'appModel>CantPickeada', formatter: '.formatter.cantidadPickeada' }" showValue="true"-->
							<!--	state="{ parts: [ {path: 'appModel>CantPickeada'},{path: 'appModel>Pikmg'}], formatter: '.formatter.colorPorcentajePickeado' }"/>-->
							<HBox>
								<Button type="{ path: 'appModel>FaltaPickear' , formatter: '.formatter.colorBotonPicking' }"
									press="onVerUHs_UMp_EntregaPedidoVentasPickingEntregaSalida" icon="sap-icon://product" visible="{= ${appModel>Kostk} !== 'C' }"/>
								<ObjectStatus state="Success" text="Picking completo" visible="{= ${appModel>Kostk} === 'C' }"/>
							</HBox>
							<Button text="Ajustar cantidad" press="onAjustarCantidad_EntregaPedidoVentasPickingEntregaSalida"/>
						</cells>
					</ColumnListItem>
				</items>
			</Table>
		</content>
		<footer>
			<OverflowToolbar>
				<Button tooltip="{i18n>boton_limpiar_pantalla}" icon="sap-icon://delete" type="Reject"
					press="._onLimpiarPantalla($event,'EntregaPedidoVentasPickingEntregaSalida')"/>
				<ToolbarSpacer/>
				<Button
					text="{= ${appModel>/EntregaPedidoVentasPickingEntregaSalida/Datos/Contabilizar} ? ${i18n>accion_contabilizar} : ${i18n>accion_grabar} }"
					type="Emphasized" press="onAccionPrincipal_EntregaPedidoVentasPickingEntregaSalida"
					enabled="{appModel>/EntregaPedidoVentasPickingEntregaSalida/Validado}"/>
			</OverflowToolbar>
		</footer>
	</Page>
</core:FragmentDefinition>